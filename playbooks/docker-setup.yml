---
- name: Install Docker and Docker Compose
  hosts: localhost
  connection: local
  become: yes

  vars:
    docker_user: "{{ lookup('env', 'USER') }}"  # Используем текущего пользователя

  tasks:
    # 1. Установка зависимостей
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    # 2. Добавление официальных репозиториев Docker
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker-ce

    # 3. Установка Docker и Compose
    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes

    # 4. Установка standalone docker-compose из репозитория Ubuntu
    - name: Install Docker Compose
      apt:
        name: docker-compose
        state: present

    # 5. Добавление текущего пользователя в группу docker
    - name: Add user to docker group
      user:
        name: "{{ docker_user }}"
        groups: docker
        append: yes

    # 6. Включение и запуск Docker
    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    # 7. Проверка
    - name: Verify installations
      block:
        - name: Check Docker
          command: docker --version
          register: docker_version

        - name: Check Docker Compose
          command: docker compose --version
          register: compose_version

        - name: Show versions
          debug:
            msg:
              - "Docker: {{ docker_version.stdout }}"
              - "Docker Compose: {{ compose_version.stdout }}"