---
- name: Setup Nginx site for subdomain
  hosts: localhost
  connection: local
  become: yes

  vars:
    nginx_site_name: todo-jq.renderlife.ru
    project_dir_subdomain: /var/www/{{ nginx_site_name }}
    api_port_subdomain: 3002

  tasks:
    - name: Create project directories for todo-jq
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user | default('root') }}"
        group: www-data
        mode: '0775'
      loop:
        - "{{ project_dir_subdomain }}"
        - "{{ project_dir_subdomain }}/frontend"
        - "{{ project_dir_subdomain }}/logs"
        - "{{ project_dir_subdomain }}/backend"

    - name: Create index.html with current date and time
      copy:
        dest: "{{ project_dir_subdomain }}/frontend/index.html"
        content: |
          <html>
            <head><title>Subdomain {{ nginx_site_name }}</title></head>
            <style>
              body {
                font-family: Arial, sans-serif;
                background: #f4f4f4;
                text-align: center;
                padding-top: 100px;
              }
              h1 {
                font-size: 38px;
                animation: colorShift 3s infinite alternate;
              }
              @keyframes colorShift {
                0% { color: #dc3545; }   /* Красный */
                100% { color: #fd7e14; } /* Оранжевый */
              }
            </style>
            <body>
              <h1>Welcome to {{ nginx_site_name }}!</h1>
              <div>
                <p>Update date and time: {{ ansible_date_time.iso8601 }}</p>
              </div>
            </body>
          </html>
        mode: '0644'
      tags: index

    # Настройка прав
    - name: Configure project permissions
      block:
        # 1. Определяем пользователя развертывания
        - name: Get current user
          command: whoami
          register: current_user
          changed_when: false

        # 2. Устанавливаем владельца и группу
        - name: Apply directory permissions
          file:
            path: "{{ project_dir_subdomain }}"
            owner: "{{ current_user.stdout }}"
            group: www-data
            recurse: yes
            mode: '0775'

        # 3. Исправленная версия установки прав для файлов
        - name: Set correct file permissions
          command: find "{{ project_dir_subdomain }}" -type f -exec chmod 664 {} \;
          args:
            creates: "{{ project_dir_subdomain }}/.permissions_set"  # Флаг для идемпотентности
          register: file_perms
          changed_when: file_perms.rc == 0

        # 4. Создаем файл-маркер после успешной установки прав
        - name: Create permissions marker file
          file:
            path: "{{ project_dir_subdomain }}/.permissions_set"
            state: touch
            mode: '0644'
          when: file_perms.rc == 0

      rescue:
        - name: Fallback permission setting
          file:
            path: "{{ project_dir_subdomain }}"
            owner: root
            group: www-data
            recurse: yes
            mode: '0775'
          when: true  # Установите true для активации fallback

    - name: Deploy Nginx config for todo-jq
      template:
        src: ../templates/nginx/subdomain.conf.j2
        dest: "/etc/nginx/sites-available/{{ nginx_site_name }}.conf"
        mode: '0644'

    - name: Enable todo-jq site in Nginx
      file:
        src: "/etc/nginx/sites-available/{{ nginx_site_name }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ nginx_site_name }}.conf"
        state: link

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false
      failed_when: nginx_test.rc != 0

    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
