import express, { Request, Response } from 'express';
import fs from 'fs';
import path from 'path';

const app = express();
const PORT = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;
const DATA_FILE = path.join('/data', 'todos.json');
const STATIC_DIR = '/var/www/renderlife';

// Тип для одного todo
interface Todo {
  id: string;
  task: string;
  completed: boolean;
}

// Middleware
app.use(express.json());
app.use(express.static(STATIC_DIR));

// Инициализация файла
if (!fs.existsSync(DATA_FILE)) {
  fs.writeFileSync(DATA_FILE, '[]', 'utf8');
}

// Чтение todos
function readTodos(): Todo[] {
  try {
    const data = fs.readFileSync(DATA_FILE, 'utf8');
    return JSON.parse(data) as Todo[];
  } catch (err) {
    console.error('Error reading todos:', err);
    return [];
  }
}

// Запись todos
function writeTodos(todos: Todo[]): void {
  fs.writeFileSync(DATA_FILE, JSON.stringify(todos, null, 2), 'utf8');
}

// API Routes

app.get('/todos', (_req: Request, res: Response) => {
  const todos = readTodos();
  res.json(todos);
});

app.post('/todos', (req: Request, res: Response) => {
  const todos = readTodos();
  const { task } = req.body;

  if (!task) {
    return res.status(400).json({ error: 'Task is required' });
  }

  const newTodo: Todo = {
    id: Date.now().toString(),
    task,
    completed: false,
  };

  todos.push(newTodo);
  writeTodos(todos);
  res.status(201).json(newTodo);
});

app.put('/todos/:id', (req: Request, res: Response) => {
  const todos = readTodos();
  const { id } = req.params;
  const index = todos.findIndex(t => t.id === id);

  if (index === -1) {
    return res.status(404).json({ error: 'Todo not found' });
  }

  todos[index] = { ...todos[index], ...req.body };
  writeTodos(todos);
  res.json(todos[index]);
});

app.delete('/todos/:id', (req: Request, res: Response) => {
  const { id } = req.params;
  const todos = readTodos();
  const filtered = todos.filter(t => t.id !== id);

  if (filtered.length === todos.length) {
    return res.status(404).json({ error: 'Todo not found' });
  }

  writeTodos(filtered);
  res.status(204).send();
});

// Статическая страница
app.get('/', (_req: Request, res: Response) => {
  res.sendFile(path.join(STATIC_DIR, 'index.html'));
});

// Запуск сервера
app.listen(PORT, () => {
  console.log(`Todo App backend running on port ${PORT}`);
  console.log(`Data file: ${DATA_FILE}`);
});
